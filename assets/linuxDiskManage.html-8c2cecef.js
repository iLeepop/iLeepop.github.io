import{_ as n,o as s,c as a,a as e}from"./app-5539d687.js";const p={},i=e(`<h1 id="磁盘管理" tabindex="-1"><a class="header-anchor" href="#磁盘管理" aria-hidden="true">#</a> 磁盘管理</h1><p>Linux 磁盘管理好坏直接关系到整个系统的性能问题。</p><p>Linux 磁盘管理常用三个命令为 <strong>df</strong>、<strong>du</strong> 和 <strong>fdisk</strong>。</p><ul><li><strong>df</strong>（英文全称：disk free）：列出文件系统的整体磁盘使用量</li><li><strong>du</strong>（英文全称：disk used）：检查磁盘空间使用量</li><li><strong>fdisk</strong>：用于磁盘分区</li></ul><hr><h2 id="df" tabindex="-1"><a class="header-anchor" href="#df" aria-hidden="true">#</a> df</h2><p>df命令参数功能：检查文件系统的磁盘空间占用情况。可以利用该命令来获取硬盘被占用了多少空间，目前还剩下多少空间等信息。</p><p>语法：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">df</span> <span class="token punctuation">[</span>-ahikHTm<span class="token punctuation">]</span> <span class="token punctuation">[</span>目录或文件名<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>选项与参数：</p><ul><li>-a：列出所有的文件系统，包括系统特有的 /proc 等文件系统</li><li>-k：以 KBytes 的容量显示各文件系统</li><li>-m：以 MBytes 的容量显示各文件系统</li><li>-h：以人们较易阅读的 GBytes, MBytes, KBytes 等格式自行显示</li><li>-H：以 M=1000K 取代 M=1024K 的进位方式</li><li>-T：显示文件系统类型, 连同该 partition 的 filesystem 名称 (例如 ext3) 也列出</li><li>-i：不用硬盘容量，而以 inode 的数量来显示</li></ul><h3 id="实例-1" tabindex="-1"><a class="header-anchor" href="#实例-1" aria-hidden="true">#</a> 实例 1</h3><p>将系统内所有的文件系统列出来</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@ilee ~<span class="token punctuation">]</span><span class="token comment"># df</span>
Filesystem      1K-blocks      Used Available Use% Mounted on
/dev/hdc2         <span class="token number">9920624</span>   <span class="token number">3823112</span>   <span class="token number">5585444</span>  <span class="token number">41</span>% /
/dev/hdc3         <span class="token number">4956316</span>    <span class="token number">141376</span>   <span class="token number">4559108</span>   <span class="token number">4</span>% /home
/dev/hdc1          <span class="token number">101086</span>     <span class="token number">11126</span>     <span class="token number">84741</span>  <span class="token number">12</span>% /boot
tmpfs              <span class="token number">371332</span>         <span class="token number">0</span>    <span class="token number">371332</span>   <span class="token number">0</span>% /dev/shm
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 Linux 底下如果 df 没有加任何选项，那么默认会将系统内所有的 (不含特殊内存内的文件系统与 swap) 都以 1 Kbytes 的容量来列出来</p><h3 id="实例-2" tabindex="-1"><a class="header-anchor" href="#实例-2" aria-hidden="true">#</a> 实例 2</h3><p>将容量结果以易读的容量格式显示出来</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@ilee ~<span class="token punctuation">]</span><span class="token comment"># df -h</span>
Filesystem            Size  Used Avail Use% Mounted on
/dev/hdc2             <span class="token number">9</span>.5G  <span class="token number">3</span>.7G  <span class="token number">5</span>.4G  <span class="token number">41</span>% /
/dev/hdc3             <span class="token number">4</span>.8G  139M  <span class="token number">4</span>.4G   <span class="token number">4</span>% /home
/dev/hdc1              99M   11M   83M  <span class="token number">12</span>% /boot
tmpfs                 363M     <span class="token number">0</span>  363M   <span class="token number">0</span>% /dev/shm
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="实例-3" tabindex="-1"><a class="header-anchor" href="#实例-3" aria-hidden="true">#</a> 实例 3</h3><p>将系统内的所有特殊文件格式及名称都列出来</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@ilee ~<span class="token punctuation">]</span><span class="token comment"># df -aT</span>
Filesystem    Type 1K-blocks    Used Available Use% Mounted on
/dev/hdc2     ext3   <span class="token number">9920624</span> <span class="token number">3823112</span>   <span class="token number">5585444</span>  <span class="token number">41</span>% /
proc          proc         <span class="token number">0</span>       <span class="token number">0</span>         <span class="token number">0</span>   -  /proc
sysfs        sysfs         <span class="token number">0</span>       <span class="token number">0</span>         <span class="token number">0</span>   -  /sys
devpts      devpts         <span class="token number">0</span>       <span class="token number">0</span>         <span class="token number">0</span>   -  /dev/pts
/dev/hdc3     ext3   <span class="token number">4956316</span>  <span class="token number">141376</span>   <span class="token number">4559108</span>   <span class="token number">4</span>% /home
/dev/hdc1     ext3    <span class="token number">101086</span>   <span class="token number">11126</span>     <span class="token number">84741</span>  <span class="token number">12</span>% /boot
tmpfs        tmpfs    <span class="token number">371332</span>       <span class="token number">0</span>    <span class="token number">371332</span>   <span class="token number">0</span>% /dev/shm
none   binfmt_misc         <span class="token number">0</span>       <span class="token number">0</span>         <span class="token number">0</span>   -  /proc/sys/fs/binfmt_misc
sunrpc  rpc_pipefs         <span class="token number">0</span>       <span class="token number">0</span>         <span class="token number">0</span>   -  /var/lib/nfs/rpc_pipefs
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="实例-4" tabindex="-1"><a class="header-anchor" href="#实例-4" aria-hidden="true">#</a> 实例 4</h3><p>将 /etc 底下的可用的磁盘容量以易读的容量格式显示</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@ilee ~<span class="token punctuation">]</span><span class="token comment"># df -h /etc</span>
Filesystem            Size  Used Avail Use% Mounted on
/dev/hdc2             <span class="token number">9</span>.5G  <span class="token number">3</span>.7G  <span class="token number">5</span>.4G  <span class="token number">41</span>% /
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="du" tabindex="-1"><a class="header-anchor" href="#du" aria-hidden="true">#</a> du</h2><p>Linux du 命令也是查看使用空间的，但是与 df 命令不同的是 Linux du 命令是对文件和目录磁盘使用的空间的查看，还是和df命令有一些区别的，这里介绍 Linux du 命令。</p><p>语法：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">du</span> <span class="token punctuation">[</span>-ahskm<span class="token punctuation">]</span> 文件或目录名称
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>选项与参数：</p><ul><li>-a ：列出所有的文件与目录容量，因为默认仅统计目录底下的文件量而已。</li><li>-h ：以人们较易读的容量格式 (G/M) 显示；</li><li>-s ：列出总量而已，而不列出每个各别的目录占用容量；</li><li>-S ：不包括子目录下的总计，与 -s 有点差别。</li><li>-k ：以 KBytes 列出容量显示；</li><li>-m ：以 MBytes 列出容量显示；</li></ul><h3 id="实例-1-1" tabindex="-1"><a class="header-anchor" href="#实例-1-1" aria-hidden="true">#</a> 实例 1</h3><p>只列出当前目录下的所有文件夹容量（包括隐藏文件夹）:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@ilee ~<span class="token punctuation">]</span><span class="token comment"># du</span>
<span class="token number">8</span>       ./test4     <span class="token operator">&lt;=</span><span class="token operator">=</span>每个目录都会列出来
<span class="token number">8</span>       ./test2
<span class="token punctuation">..</span><span class="token punctuation">..</span>中间省略<span class="token punctuation">..</span><span class="token punctuation">..</span>
<span class="token number">12</span>      ./.gconfd   <span class="token operator">&lt;=</span><span class="token operator">=</span>包括隐藏文件的目录
<span class="token number">220</span>     <span class="token builtin class-name">.</span>           <span class="token operator">&lt;=</span><span class="token operator">=</span>这个目录<span class="token punctuation">(</span>.<span class="token punctuation">)</span>所占用的总量
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>直接输入 du 没有加任何选项时，则 du 会分析当前所在目录里的子目录所占用的硬盘空间。</p><h3 id="实例-2-1" tabindex="-1"><a class="header-anchor" href="#实例-2-1" aria-hidden="true">#</a> 实例 2</h3><p>将文件的容量也列出来</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@ilee ~<span class="token punctuation">]</span><span class="token comment"># du -a</span>
<span class="token number">12</span>      ./install.log.syslog   <span class="token operator">&lt;=</span><span class="token operator">=</span>有文件的列表了
<span class="token number">8</span>       ./.bash_logout
<span class="token number">8</span>       ./test4
<span class="token number">8</span>       ./test2
<span class="token punctuation">..</span><span class="token punctuation">..</span>中间省略<span class="token punctuation">..</span><span class="token punctuation">..</span>
<span class="token number">12</span>      ./.gconfd
<span class="token number">220</span>     <span class="token builtin class-name">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="实例-3-1" tabindex="-1"><a class="header-anchor" href="#实例-3-1" aria-hidden="true">#</a> 实例 3</h3><p>检查根目录底下每个目录所占用的容量</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@ilee ~<span class="token punctuation">]</span><span class="token comment"># du -sm /*</span>
<span class="token number">7</span>       /bin
<span class="token number">6</span>       /boot
<span class="token punctuation">..</span><span class="token punctuation">..</span>.中间省略<span class="token punctuation">..</span><span class="token punctuation">..</span>
<span class="token number">0</span>       /proc
<span class="token punctuation">..</span><span class="token punctuation">..</span>.中间省略<span class="token punctuation">..</span><span class="token punctuation">..</span>
<span class="token number">1</span>       /tmp
<span class="token number">3859</span>    /usr     <span class="token operator">&lt;=</span><span class="token operator">=</span>系统初期最大就是他了啦！
<span class="token number">77</span>      /var
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通配符 * 来代表每个目录。</p><p>与 df 不一样的是，du 这个命令其实会直接到文件系统内去搜寻所有的文件数据。</p><hr><h2 id="fdisk" tabindex="-1"><a class="header-anchor" href="#fdisk" aria-hidden="true">#</a> fdisk</h2><p>fdisk 是 Linux 的磁盘分区表操作工具。</p><p>语法：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">fdisk</span> <span class="token punctuation">[</span>-l<span class="token punctuation">]</span> 装置名称
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>选项与参数：</p><ul><li>-l ：输出后面接的装置所有的分区内容。若仅有 fdisk -l 时， 则系统将会把整个系统内能够搜寻到的装置的分区均列出来。</li></ul><h3 id="实例-1-2" tabindex="-1"><a class="header-anchor" href="#实例-1-2" aria-hidden="true">#</a> 实例 1</h3><p>列出所有分区信息</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@AY120919111755c246621 tmp<span class="token punctuation">]</span><span class="token comment"># fdisk -l</span>

Disk /dev/xvda: <span class="token number">21.5</span> GB, <span class="token number">21474836480</span> bytes
<span class="token number">255</span> heads, <span class="token number">63</span> sectors/track, <span class="token number">2610</span> cylinders
Units <span class="token operator">=</span> cylinders of <span class="token number">16065</span> * <span class="token number">512</span> <span class="token operator">=</span> <span class="token number">8225280</span> bytes
Sector size <span class="token punctuation">(</span>logical/physical<span class="token punctuation">)</span>: <span class="token number">512</span> bytes / <span class="token number">512</span> bytes
I/O size <span class="token punctuation">(</span>minimum/optimal<span class="token punctuation">)</span>: <span class="token number">512</span> bytes / <span class="token number">512</span> bytes
Disk identifier: 0x00000000

    Device Boot      Start         End      Blocks   Id  System
/dev/xvda1   *           <span class="token number">1</span>        <span class="token number">2550</span>    <span class="token number">20480000</span>   <span class="token number">83</span>  Linux
/dev/xvda2            <span class="token number">2550</span>        <span class="token number">2611</span>      <span class="token number">490496</span>   <span class="token number">82</span>  Linux swap / Solaris

Disk /dev/xvdb: <span class="token number">21.5</span> GB, <span class="token number">21474836480</span> bytes
<span class="token number">255</span> heads, <span class="token number">63</span> sectors/track, <span class="token number">2610</span> cylinders
Units <span class="token operator">=</span> cylinders of <span class="token number">16065</span> * <span class="token number">512</span> <span class="token operator">=</span> <span class="token number">8225280</span> bytes
Sector size <span class="token punctuation">(</span>logical/physical<span class="token punctuation">)</span>: <span class="token number">512</span> bytes / <span class="token number">512</span> bytes
I/O size <span class="token punctuation">(</span>minimum/optimal<span class="token punctuation">)</span>: <span class="token number">512</span> bytes / <span class="token number">512</span> bytes
Disk identifier: 0x56f40944

    Device Boot      Start         End      Blocks   Id  System
/dev/xvdb2               <span class="token number">1</span>        <span class="token number">2610</span>    <span class="token number">20964793</span>+  <span class="token number">83</span>  Linux
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="实例-2-2" tabindex="-1"><a class="header-anchor" href="#实例-2-2" aria-hidden="true">#</a> 实例 2</h3><p>找出你系统中的根目录所在磁盘，并查阅该硬盘内的相关信息</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@ilee ~<span class="token punctuation">]</span><span class="token comment"># df /            &lt;==注意：重点在找出磁盘文件名而已</span>
Filesystem           1K-blocks      Used Available Use% Mounted on
/dev/hdc2              <span class="token number">9920624</span>   <span class="token number">3823168</span>   <span class="token number">5585388</span>  <span class="token number">41</span>% /

<span class="token punctuation">[</span>root@ilee ~<span class="token punctuation">]</span><span class="token comment"># fdisk /dev/hdc  &lt;==仔细看，不要加上数字喔！</span>
The number of cylinders <span class="token keyword">for</span> this disk is <span class="token builtin class-name">set</span> to <span class="token number">5005</span>.
There is nothing wrong with that, but this is larger than <span class="token number">1024</span>,
and could <span class="token keyword">in</span> certain setups cause problems with:
<span class="token number">1</span><span class="token punctuation">)</span> software that runs at boot <span class="token function">time</span> <span class="token punctuation">(</span>e.g., old versions of LILO<span class="token punctuation">)</span>
<span class="token number">2</span><span class="token punctuation">)</span> booting and partitioning software from other OSs
   <span class="token punctuation">(</span>e.g., DOS FDISK, OS/2 FDISK<span class="token punctuation">)</span>

Command <span class="token punctuation">(</span>m <span class="token keyword">for</span> <span class="token builtin class-name">help</span><span class="token punctuation">)</span>:     <span class="token operator">&lt;=</span><span class="token operator">=</span>等待你的输入！
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输入 m 后，就会看到底下这些命令介绍</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>Command <span class="token punctuation">(</span>m <span class="token keyword">for</span> <span class="token builtin class-name">help</span><span class="token punctuation">)</span>: m   <span class="token operator">&lt;=</span><span class="token operator">=</span> 输入 m 后，就会看到底下这些命令介绍
Command action
   a   toggle a bootable flag
   b   edit bsd disklabel
   c   toggle the dos compatibility flag
   d   delete a partition            <span class="token operator">&lt;=</span><span class="token operator">=</span>删除一个partition
   l   list known partition types
   m   print this menu
   n   <span class="token function">add</span> a new partition           <span class="token operator">&lt;=</span><span class="token operator">=</span>新增一个partition
   o   create a new empty DOS partition table
   p   print the partition table     <span class="token operator">&lt;=</span><span class="token operator">=</span>在屏幕上显示分割表
   q   quit without saving changes   <span class="token operator">&lt;=</span><span class="token operator">=</span>不储存离开fdisk程序
   s   create a new empty Sun disklabel
   t   change a partition&#39;s system <span class="token function">id</span>
   u   change display/entry <span class="token function">units</span>
   <span class="token function">v</span>   verify the partition table
   w   <span class="token function">write</span> table to disk and <span class="token builtin class-name">exit</span>  <span class="token operator">&lt;=</span><span class="token operator">=</span>将刚刚的动作写入分割表
   x   extra functionality <span class="token punctuation">(</span>experts only<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>离开 fdisk 时按下 <code>q</code>，那么所有的动作都不会生效，相反的， 按下<code>w</code>就是动作生效的意思。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>Command <span class="token punctuation">(</span>m <span class="token keyword">for</span> <span class="token builtin class-name">help</span><span class="token punctuation">)</span>: p  <span class="token operator">&lt;=</span><span class="token operator">=</span> 这里可以输出目前磁盘的状态

Disk /dev/hdc: <span class="token number">41.1</span> GB, <span class="token number">41174138880</span> bytes        <span class="token operator">&lt;=</span><span class="token operator">=</span>这个磁盘的文件名与容量
<span class="token number">255</span> heads, <span class="token number">63</span> sectors/track, <span class="token number">5005</span> cylinders      <span class="token operator">&lt;=</span><span class="token operator">=</span>磁头、扇区与磁柱大小
Units <span class="token operator">=</span> cylinders of <span class="token number">16065</span> * <span class="token number">512</span> <span class="token operator">=</span> <span class="token number">8225280</span> bytes <span class="token operator">&lt;=</span><span class="token operator">=</span>每个磁柱的大小

   Device Boot      Start         End      Blocks   Id  System
/dev/hdc1   *           <span class="token number">1</span>          <span class="token number">13</span>      <span class="token number">104391</span>   <span class="token number">83</span>  Linux
/dev/hdc2              <span class="token number">14</span>        <span class="token number">1288</span>    <span class="token number">10241437</span>+  <span class="token number">83</span>  Linux
/dev/hdc3            <span class="token number">1289</span>        <span class="token number">1925</span>     <span class="token number">5116702</span>+  <span class="token number">83</span>  Linux
/dev/hdc4            <span class="token number">1926</span>        <span class="token number">5005</span>    <span class="token number">24740100</span>    <span class="token number">5</span>  Extended
/dev/hdc5            <span class="token number">1926</span>        <span class="token number">2052</span>     <span class="token number">1020096</span>   <span class="token number">82</span>  Linux swap / Solaris
<span class="token comment"># 装置文件名 启动区否 开始磁柱    结束磁柱  1K大小容量 磁盘分区槽内的系统</span>

Command <span class="token punctuation">(</span>m <span class="token keyword">for</span> <span class="token builtin class-name">help</span><span class="token punctuation">)</span>: q
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>不储存离开按下 q</p><p>使用 <code>p</code> 可以列出目前这颗磁盘的分割表信息，这个信息的上半部在显示整体磁盘的状态。</p><h2 id="磁盘格式化" tabindex="-1"><a class="header-anchor" href="#磁盘格式化" aria-hidden="true">#</a> 磁盘格式化</h2><p>磁盘分割完毕后自然就是要进行文件系统的格式化，格式化的命令非常的简单，使用 <code>mkfs</code>（make filesystem） 命令。</p><p>语法：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkfs</span> <span class="token punctuation">[</span>-t 文件系统格式<span class="token punctuation">]</span> 装置文件名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>选项与参数：</p><ul><li>-t ：可以接文件系统格式，例如 ext3, ext2, vfat 等(系统有支持才会生效)</li></ul><h3 id="实例-1-3" tabindex="-1"><a class="header-anchor" href="#实例-1-3" aria-hidden="true">#</a> 实例 1</h3><p>查看 mkfs 支持的文件格式</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@ilee ~<span class="token punctuation">]</span><span class="token comment"># mkfs[tab][tab]</span>
<span class="token function">mkfs</span>         mkfs.cramfs  mkfs.ext2    mkfs.ext3    mkfs.msdos   mkfs.vfat
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>按下两个[tab]，会发现 mkfs 支持的文件格式如上所示。</p><h3 id="实例-2-3" tabindex="-1"><a class="header-anchor" href="#实例-2-3" aria-hidden="true">#</a> 实例 2</h3><p>将分区 /dev/hdc6（可指定你自己的分区） 格式化为 ext3 文件系统：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@ilee ~<span class="token punctuation">]</span><span class="token comment"># mkfs -t ext3 /dev/hdc6</span>
<span class="token function">mke2fs</span> <span class="token number">1.39</span> <span class="token punctuation">(</span><span class="token number">29</span>-May-2006<span class="token punctuation">)</span>
Filesystem <span class="token assign-left variable">label</span><span class="token operator">=</span>                <span class="token operator">&lt;=</span><span class="token operator">=</span>这里指的是分割槽的名称<span class="token punctuation">(</span>label<span class="token punctuation">)</span>
OS type: Linux
Block <span class="token assign-left variable">size</span><span class="token operator">=</span><span class="token number">4096</span> <span class="token punctuation">(</span>log<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>          <span class="token operator">&lt;=</span><span class="token operator">=</span>block 的大小配置为 4K 
Fragment <span class="token assign-left variable">size</span><span class="token operator">=</span><span class="token number">4096</span> <span class="token punctuation">(</span>log<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token number">251392</span> inodes, <span class="token number">502023</span> blocks     <span class="token operator">&lt;=</span><span class="token operator">=</span>由此配置决定的inode/block数量
<span class="token number">25101</span> blocks <span class="token punctuation">(</span><span class="token number">5.00</span>%<span class="token punctuation">)</span> reserved <span class="token keyword">for</span> the super user
First data <span class="token assign-left variable">block</span><span class="token operator">=</span><span class="token number">0</span>
Maximum filesystem <span class="token assign-left variable">blocks</span><span class="token operator">=</span><span class="token number">515899392</span>
<span class="token number">16</span> block <span class="token function">groups</span>
<span class="token number">32768</span> blocks per group, <span class="token number">32768</span> fragments per group
<span class="token number">15712</span> inodes per group
Superblock backups stored on blocks:
        <span class="token number">32768</span>, <span class="token number">98304</span>, <span class="token number">163840</span>, <span class="token number">229376</span>, <span class="token number">294912</span>

Writing inode tables: <span class="token keyword">done</span>
Creating journal <span class="token punctuation">(</span><span class="token number">8192</span> blocks<span class="token punctuation">)</span>: <span class="token keyword">done</span> <span class="token operator">&lt;=</span><span class="token operator">=</span>有日志记录
Writing superblocks and filesystem accounting information: <span class="token keyword">done</span>

This filesystem will be automatically checked every <span class="token number">34</span> mounts or
<span class="token number">180</span> days, whichever comes first.  Use tune2fs <span class="token parameter variable">-c</span> or <span class="token parameter variable">-i</span> to override.
<span class="token comment"># 这样就创建起来我们所需要的 Ext3 文件系统了！简单明了！</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="磁盘检验" tabindex="-1"><a class="header-anchor" href="#磁盘检验" aria-hidden="true">#</a> 磁盘检验</h2><p>fsck（file system check）用来检查和维护不一致的文件系统。</p><p>若系统掉电或磁盘发生问题，可利用fsck命令对文件系统进行检查。</p><p>语法：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">fsck</span> <span class="token punctuation">[</span>-t 文件系统<span class="token punctuation">]</span> <span class="token punctuation">[</span>-ACay<span class="token punctuation">]</span> 装置名称
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>选项与参数：</p><ul><li>-t : 给定档案系统的型式，若在 /etc/fstab 中已有定义或 kernel 本身已支援的则不需加上此参数</li><li>-s : 依序一个一个地执行 fsck 的指令来检查</li><li>-A : 对/etc/fstab 中所有列出来的 分区（partition）做检查</li><li>-C : 显示完整的检查进度</li><li>-d : 打印出 e2fsck 的 debug 结果</li><li>-p : 同时有 -A 条件时，同时有多个 fsck 的检查一起执行</li><li>-R : 同时有 -A 条件时，省略 / 不检查</li><li>-V : 详细显示模式</li><li>-a : 如果检查有错则自动修复</li><li>-r : 如果检查有错则由使用者回答是否修复</li><li>-y : 选项指定检测每个文件是自动输入yes，在不确定那些是不正常的时候，可以执行 # fsck -y 全部检查修复。</li></ul><h3 id="实例-1-4" tabindex="-1"><a class="header-anchor" href="#实例-1-4" aria-hidden="true">#</a> 实例 1</h3><p>查看系统有多少文件系统支持的 fsck 命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@ilee ~<span class="token punctuation">]</span><span class="token comment"># fsck[tab][tab]</span>
<span class="token function">fsck</span>         fsck.cramfs  fsck.ext2    fsck.ext3    fsck.msdos   fsck.vfat
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="实例-2-4" tabindex="-1"><a class="header-anchor" href="#实例-2-4" aria-hidden="true">#</a> 实例 2</h3><p>强制检测 /dev/hdc6 分区:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@ilee ~<span class="token punctuation">]</span><span class="token comment"># fsck -C -f -t ext3 /dev/hdc6 </span>
<span class="token function">fsck</span> <span class="token number">1.39</span> <span class="token punctuation">(</span><span class="token number">29</span>-May-2006<span class="token punctuation">)</span>
e2fsck <span class="token number">1.39</span> <span class="token punctuation">(</span><span class="token number">29</span>-May-2006<span class="token punctuation">)</span>
Pass <span class="token number">1</span>: Checking inodes, blocks, and sizes
Pass <span class="token number">2</span>: Checking directory structure
Pass <span class="token number">3</span>: Checking directory connectivity
Pass <span class="token number">4</span>: Checking reference counts
Pass <span class="token number">5</span>: Checking group summary information
vbird_logical: <span class="token number">11</span>/251968 files <span class="token punctuation">(</span><span class="token number">9.1</span>% non-contiguous<span class="token punctuation">)</span>, <span class="token number">36926</span>/1004046 blocks
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>没有加上 -f 的选项，则由于这个文件系统不曾出现问题，检查的经过非常快，加上 -f 强制检查，才会一项一项的显示过程。</p><hr><h2 id="磁盘挂载与卸除" tabindex="-1"><a class="header-anchor" href="#磁盘挂载与卸除" aria-hidden="true">#</a> 磁盘挂载与卸除</h2><p>Linux 的磁盘挂载使用 <code>mount</code> 命令，卸载使用 <code>umount</code> 命令。</p><p>磁盘挂载语法：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mount</span> <span class="token punctuation">[</span>-t 文件系统<span class="token punctuation">]</span> <span class="token punctuation">[</span>-L Label名<span class="token punctuation">]</span> <span class="token punctuation">[</span>-o 额外选项<span class="token punctuation">]</span> <span class="token punctuation">[</span>-n<span class="token punctuation">]</span>  装置文件名  挂载点
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="实例-1-5" tabindex="-1"><a class="header-anchor" href="#实例-1-5" aria-hidden="true">#</a> 实例 1</h3><p>用默认的方式，将刚刚创建的 /dev/hdc6 挂载到 /mnt/hdc6 上面</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@ilee ~<span class="token punctuation">]</span><span class="token comment"># mkdir /mnt/hdc6</span>
<span class="token punctuation">[</span>root@ilee ~<span class="token punctuation">]</span><span class="token comment"># mount /dev/hdc6 /mnt/hdc6</span>
<span class="token punctuation">[</span>root@ilee ~<span class="token punctuation">]</span><span class="token comment"># df</span>
Filesystem           1K-blocks      Used Available Use% Mounted on
<span class="token punctuation">..</span><span class="token punctuation">..</span>.中间省略<span class="token punctuation">..</span><span class="token punctuation">..</span>.
/dev/hdc6              <span class="token number">1976312</span>     <span class="token number">42072</span>   <span class="token number">1833836</span>   <span class="token number">3</span>% /mnt/hdc6
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>磁盘卸载命令 <code>umount</code> 语法：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">umount</span> <span class="token punctuation">[</span>-fn<span class="token punctuation">]</span> 装置文件名或挂载点
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>选项与参数：</p><ul><li>-f ：强制卸除！可用在类似网络文件系统 (NFS) 无法读取到的情况下</li><li>-n ：不升级 /etc/mtab 情况下卸除</li></ul><p>卸载/dev/hdc6</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@ilee ~<span class="token punctuation">]</span><span class="token comment"># umount /dev/hdc6</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,104),l=[i];function t(c,o){return s(),a("div",null,l)}const r=n(p,[["render",t],["__file","linuxDiskManage.html.vue"]]);export{r as default};
