import{_ as t,o as e,c as n,a}from"./app-5539d687.js";const d={},s=a(`<h1 id="gzip压缩" tabindex="-1"><a class="header-anchor" href="#gzip压缩" aria-hidden="true">#</a> GZIP压缩</h1><h2 id="配置" tabindex="-1"><a class="header-anchor" href="#配置" aria-hidden="true">#</a> 配置</h2><p>打开命令行，进入nginx配置目录：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /etc/nginx
<span class="token comment">#</span>
<span class="token function">vim</span> nginx.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在你的server块中添加以下内容：</p><div class="language-nginx line-numbers-mode" data-ext="nginx"><pre class="language-nginx"><code>...
<span class="token directive"><span class="token keyword">server</span></span> <span class="token punctuation">{</span>
    <span class="token directive"><span class="token keyword">gzip</span> <span class="token boolean">on</span></span><span class="token punctuation">;</span>
    <span class="token directive"><span class="token keyword">gzip_types</span> application/javascript</span><span class="token punctuation">;</span>
    ...
<span class="token punctuation">}</span>
...
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>开启gzip压缩功能，并表示将 js 文件进行压缩。</p><p>可以自己去弄一个几M的 js 文件，丢到服务器试一试，在浏览器控制台 Network 可以查看文件的原大小和压缩后的大小，自行比对。</p><h2 id="参数" tabindex="-1"><a class="header-anchor" href="#参数" aria-hidden="true">#</a> 参数</h2><table><thead><tr><th>名称</th><th>参考参数</th><th>详情</th></tr></thead><tbody><tr><td>gzip</td><td>on</td><td>决定是否开启gzip模块</td></tr><tr><td>gzip_min_length</td><td>1k</td><td>当返回内容大于此值时才会使用gzip进行压缩,以K为单位,当值为0时，所有页面都进行压缩，设置小于1k意义不大</td></tr><tr><td>gzip_comp_level</td><td>6</td><td>设置gzip压缩等级，1-9可选，等级越底压缩速度越快文件压缩比越小，反之速度越慢文件压缩比越大，占用CPU，高并发不建议使用</td></tr><tr><td>gzip_types</td><td>js\\css\\text\\json...</td><td>匹配压缩类型，取自application/type，文本压缩效果最好</td></tr><tr><td>gzip_vary</td><td>on</td><td>用在响应头添加 very:accept-encoding，让代理服务器根据请求头识别是否启用了gzip</td></tr><tr><td>gzip_http_version</td><td>1.1</td><td>启用gzip的最低http协议版本，默认是1.1</td></tr><tr><td>gzip_buffers</td><td>2 4k</td><td>以4k为单位,按照原始数据大小以4k为单位的2倍申请内存，缓冲区</td></tr><tr><td>gzip_static</td><td>on</td><td>静态压缩，提前准备好的压缩文件，在同级目录下会有一个.gz的压缩包，避免动态压缩性能较好</td></tr><tr><td>gzip_disable</td><td>MSIE[1-6]</td><td>(IE5.5和IE6 SP1使用msie6参数来禁止gzip压缩 )指定哪些不需要gzip压缩的浏览器(将和User-Agents进行匹配),依赖于PCRE库，有些浏览器对于gzip支持不友好</td></tr><tr><td>gzip_proxied</td><td>off</td><td>nginx做为反向代理时启用,off(关闭所有代理结果的数据的压缩),expired(启用压缩,如果header头中包括&quot;Expires&quot;头信息),no-cache(启用压缩,header头中包含&quot;Cache-Control:no-cache&quot;),no-store(启用压缩,header头中包含&quot;Cache-Control:no-store&quot;),private(启用压缩,header头中包含&quot;Cache-Control:private&quot;),no_last_modefied(启用压缩,header头中不包含&quot;Last-Modified&quot;),no_etag(启用压缩,如果header头中不包含&quot;Etag&quot;头信息),auth(启用压缩,如果header头中包含&quot;Authorization&quot;头信息)</td></tr></tbody></table><p>在浏览器控制台Network看到 <strong>Response Header</strong> 中的 <strong>Content-Encoding</strong> 值为 <strong>gzip</strong></p>`,11),i=[s];function r(o,p){return e(),n("div",null,i)}const l=t(d,[["render",r],["__file","nginxGZIP.html.vue"]]);export{l as default};
